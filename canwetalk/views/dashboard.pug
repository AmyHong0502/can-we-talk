extends layout

block content
  canvas#myChart(width="400" height="400")

  p#json-data(style='visibility: hidden;')= JSON.stringify(data, undefined, 2)

  script(src='javascripts/chartjs/Chart.bundle.js')
  script(src='javascripts/chartjs/Chart.bundle.min.js')

  script.
    const jsonData = JSON.parse(document.getElementById('json-data').innerHTML);

    let ctx = document.getElementById("myChart").getContext('2d');
    let newChart = {
      type: 'line',
      data: {
        labels: [],
        datasets: []
      },
      options: {
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    };

    let sleep = {
      label: 'Sleep',
      data: [],
      backgroundColor: 'rgba(255, 159, 64, 0.2)',
      borderColor: 'rgba(255, 159, 64, 1)',
      borderWidth: 1
    }

    let exercise = {
      label: 'Exercise',
      data: [],
      backgroundColor: 'rgba(75, 192, 192, 0.2)',
      borderColor: 'rgba(75, 192, 192, 1)',
      borderWidth: 1
    }

    for (let i = 0; i < jsonData.sleep.length; i++) {
      let date = new Date(parseInt((jsonData.sleep[i]._id).substring(0, 8), 16) * 1000).getDate();

      newChart.data.labels.push(date);

      sleep.data.push(jsonData.sleep[i].hours);
      exercise.data.push(jsonData.exercise[i].hours);
    }

    newChart.data.datasets.push(sleep);
    newChart.data.datasets.push(exercise);
    console.log(JSON.stringify(newChart, undefined, 2));

    let myChart = new Chart(ctx, newChart);
